apply plugin: 'com.android.application'

import org.apache.tools.ant.taskdefs.condition.Os

android {
    compileSdkVersion 21
    buildToolsVersion "23.0.2"

    sourceSets {
        main {
            jni.srcDirs = []
            jniLibs.srcDir 'src/main/libs'
        }
    }

    defaultConfig {
        versionCode 1000
        versionName "0.1.0"
        minSdkVersion 15
        targetSdkVersion 23
        applicationId "com.mcxiaoke.ndk.swigcpp"

    }

    buildTypes {
        release {
            minifyEnabled false
        }

        debug {
            applicationIdSuffix null
        }
    }

    lintOptions {
        abortOnError false
    }
}

def getNdkBuildCmd() {
    if (Os.isFamily(Os.FAMILY_WINDOWS)) {
        return "ndk-build.cmd"
    } else {
        return "ndk-build"
    }
}

task ndkBuild(type: Exec) {
    commandLine getNdkBuildCmd(), '-C', file('src/main').absolutePath
}

tasks.withType(JavaCompile) {
    compileTask -> compileTask.dependsOn ndkBuild
}

task javah(type: Exec) {
    def jniClassName = "com.example.hellojni.HelloJni"
    def classpath = "$buildDir/intermediates/classes/debug/"
    def nativeIncludes = "src/main/jni/"
    commandLine "javah", "-d", "$nativeIncludes", "-classpath", "$classpath", "$jniClassName"
}

// Location of where to store the jni wrapped files
def sourceDir = new File("${projectDir}/src/main/java/com/example/hellojni")
task createSourceDir {
    sourceDir.mkdirs()
}

// For this to work, it's assumed SWIG is installed
// TODO: This only works when called from Command Line (gradlew runSwig)
task runSwig(type: Exec, dependsOn: ['createSourceDir']) {

    String osName = System.getProperty("os.name").toLowerCase();
    if (osName.contains("windows")) {
        workingDir '/src/main/jni'   // This implicitly starts from $(projectDir) evidently
        commandLine 'cmd', '/c', 'swig'
        // for c++
        args '-c++', '-java', '-package', 'com.example.hellojni', '-outdir', sourceDir.absolutePath, 'Unix.i'
    } else {
        commandLine 'swig'
        args '-c++', '-java', '-package', 'com.example.hellojni', '-outdir', sourceDir.absolutePath, "${projectDir}/src/main/jni/Unix.i"
    }

}